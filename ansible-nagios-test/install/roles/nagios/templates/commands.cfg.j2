# HEADER: This file was autogenerated at Fri Dec 13 07:54:29 +0000 2013
# HEADER: by puppet.  While it can still be managed manually, it
# HEADER: is definitely not recommended.

## EDIT add IRC bot check
# 'notify-by-ircbot' command definition
#define command{
#        command_name    notify-by-ircbot
#        command_line    /usr/bin/printf "%b" "#openstack-lab NAGIOS: $NOTIFICATIONTYPE$ - $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$: $SERVICEOUTPUT$ ($$(hostname -s))" | nc -w 1 10.16.17.75 5050
#}

# 'host-notify-by-ircbot' command definition
#define command{
#	command_name	host-notify-by-ircbot
#	command_line	/usr/bin/printf "%b" "#openstack-lab NAGIOS: $NOTIFICATIONTYPE$ - $HOSTALIAS$ is $HOSTSTATE$: $HOSTOUTPUT$ ($$(hostname -s))" | nc -w 1 10.16.17.75 5050
#}
#### Define NRPE command here, you need to have this for external host checks #####

define command {
	command_name                   check_nrpe
	command_line                   /usr/lib64/nagios/plugins/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}

# check_uptime command definition
define command{
        command_name    check_uptime
        command_line    /usr/lib64/nagios/plugins/check_uptime
}

{% if check_http_301_ok == true %}
# 'check_http' command definition for elk kibana
define command{
        command_name    check_elk_http
        command_line    $USER1$/check_http -f ok -a {{kibana_user}}:{{kibana_password}} -I $HOSTADDRESS$ $ARG1$
}
{% endif %}

{% if check_http_301_ok == false %}
# 'check_http' command definition for elk kibana
define command{
        command_name    check_elk_http
        command_line    $USER1$/check_http -a {{kibana_user}}:{{kibana_password}} -I $HOSTADDRESS$ $ARG1$
}
{% endif %}
# 'check_dns' command definition for DNS Servers
define command{
        command_name    check_dns
        command_line    $USER1$/check_dns -s $HOSTADDRESS$ -H {{dns_check_domain}}
}
{% if check_http_301_ok == true %}
# 'check_http' command definition for nginx / reverse proxy TCP/80 for Jenkins
define command{
        command_name    check_jenkins_http
        command_line    $USER1$/check_http -f ok -a {{jenkins_user}}:{{jenkins_pass}} -I $HOSTADDRESS$ $ARG1$
}
{% endif %}
{% if check_http_301_ok == false %}
# 'check_http' command definition for nginx / reverse proxy TCP/80 for Jenkins
define command{
        command_name    check_jenkins_http
        command_line    $USER1$/check_http -a {{jenkins_user}}:{{jenkins_pass}} -I $HOSTADDRESS$ $ARG1$
}
{% endif %}
{% if check_http_301_ok == true %}
# 'check_http' command for oobservers that need auth
define command{
        command_name    check_oobauth_http
        command_line    $USER1$/check_http -f ok -a {{oobserver_user}}:{{oobserver_pass}} -I $HOSTADDRESS$ $ARG1$
}
{% endif %}
{% if check_http_301_ok == false %}
define command{
        command_name    check_oobauth_http
        command_line    $USER1$/check_http -a {{oobserver_user}}:{{oobserver_pass}} -I $HOSTADDRESS$ $ARG1$
}
{% endif %}
# 'check_idrac_ps' command definition for idracs
define command{
        command_name    check_idrac_ps
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w PS
}

# 'check_idrac_fan' command definition for idracs
define command{
        command_name    check_idrac_fan
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w FAN
}

# 'check_idrac_battery' command definition for idracs
define command{
        command_name    check_idrac_battery
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w BATTERY
}

# 'check_idrac_pu' command definition for idracs
define command{
        command_name    check_idrac_pu
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w PU
}

# 'check_idrac_mem' command definition for idracs
define command{
        command_name    check_idrac_mem
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w MEM
}

# 'check_idrac_disk' command definition for idracs
define command{
        command_name    check_idrac_disk
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w DISK
}

# 'check_idrac_vdisk' command definition for idracs
define command{
        command_name    check_idrac_vdisk
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w VDISK
}

# 'check_idrac_sensor' command definition for idracs
define command{
        command_name    check_idrac_sensor
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w SENSOR
}

# 'check_idrac_cpu' command definition for idracs
define command{
        command_name    check_idrac_cpu
        command_line    /usr/lib64/nagios/plugins/idrac_2.2rc4 -H $HOSTADDRESS$ {{snmp_opts}} -m {{snmp_mib_path}}/idrac-smiv2.mib {{snmp_check_thresholds}} -w CPU
}

# check_ipmi_sensor command for supermicro 6018r IPMI checks
define command{
        command_name    6018r_check_cpu
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc6018r_check_cpu_opts}} --nosel
}

define command{
        command_name    6018r_check_mem
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc6018r_check_mem_opts}} --nosel
}

define command{
        command_name    6018r_check_temp
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc6018r_check_temp_opts}} --nosel
}

# check_ipmi_sensor command for supermicro 6048r IPMI checks

define command{
        command_name    6048r_check_cpu
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc6048r_check_cpu_opts}} --nosel
}

define command{
        command_name    6048r_check_mem
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc6048r_check_mem_opts}} --nosel
}

define command{
        command_name    6048r_check_disk
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc6048r_check_disk_opts}} --nosel
}

define command{
        command_name    6048r_check_temp
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc6048r_check_temp_opts}} --nosel
}

# check_ipmi_sensor command for supermicro 1028r IPMI checks

define command{
        command_name    1028r_check_cpu
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc1028r_check_cpu_opts}} --nosel
}

define command{
        command_name    1028r_check_mem
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc1028r_check_mem_opts}} --nosel
}

define command{
        command_name    1028r_check_disk
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc1028r_check_disk_opts}} --nosel
}

define command{
        command_name    1028r_check_temp
        command_line    /usr/lib64/nagios/plugins/check_ipmi_sensor -H $_HOSTIPMI_IP$ -f $ARG1$ -i {{smc1028r_check_temp_opts}} --nosel
}

### FreeNAS Checks
define command{
	command_name	check_freenas_disk
	command_line	$USER1$/check_freenas.py -H $HOSTADDRESS$ -c disks -u {{freenas_user}} -p {{freenas_pass}}
}

define command{
	command_name	check_freenas_volume
	command_line	$USER1$/check_freenas.py -H $HOSTADDRESS$ -c volumes -u {{freenas_user}} -p {{freenas_pass}}
}

define command{
	command_name	check_freenas_alerts
	command_line	$USER1$/check_freenas.py -H $HOSTADDRESS$ -c alerts -u {{freenas_user}} -p {{freenas_pass}}
}

# bsd_check_swap command definition
define command{
        command_name    bsd_check_swap
        command_line    /usr/local/libexec/nagios/check_swap
}

# bsd_check_users command definition
define command{
        command_name    bsd_check_users
        command_line    /usr/local/libexec/nagios/check_users
}

# bsd_check_load command definition
define command{
        command_name    bsd_check_load
        command_line    /usr/local/libexec/nagios/check_load
}

# bsd_check_disk command definition
define command{
        command_name    bsd_check_disk
        command_line    /usr/local/libexec/nagios/check_disk
}

# bsd_check_procs command definition
define command{
        command_name    bsd_check_procs
        command_line    /usr/local/libexec/nagios/check_procs
}

# bsd_check_procs command definition
define command{
        command_name    bsd_check_uptime
        command_line    /usr/local/libexec/nagios/bsd_check_uptime
}


### These are OpenStack examples, I am leaving them here for reference
### You can define more custom commands below for NRPE ###
#
#define command {
#	command_name                   check_horizon
#	command_line                   /usr/lib64/nagios/plugins/check_http -H $HOSTADDRESS$ -w 5 -c 10 -u /dashboard/
#}
#
#define command {
#	command_name                   check_drac_web
#	command_line                   /usr/lib64/nagios/plugins/check_http -H $HOSTADDRESS$ -w 5 -c 10 -u /
#}
#
#define command {
#	command_name                   keystone-user-list
#	command_line                   /usr/lib64/nagios/plugins/keystone-user-list
#}
#
#define command {
#	command_name                   nova-list
#	command_line                   /usr/lib64/nagios/plugins/nova-list
#}
#
#define command {
#	command_name                   nova-service-list
#	command_line                   /usr/lib64/nagios/plugins/nova-service-enabled-down
#}
#
#define command {
#	command_name                   nova-novncproxy-check
#	command_line                   /usr/lib64/nagios/plugins/nova-novncproxy-check
#}
#
#define command {
#	command_name                   neutron-net-list
#	command_line                   /usr/lib64/nagios/plugins/neutron-net-list
#}
#
#define command {
#	command_name                   neutron-network-check
#	command_line                   /usr/lib64/nagios/plugins/neutron-network-check
#}
#
#define command {
#	command_name                   heat-list
#	command_line                   /usr/lib64/nagios/plugins/heat-list
#}
#
#define command {
#	command_name                   cinder-list
#	command_line                   /usr/lib64/nagios/plugins/cinder-list
#}
#
#define command {
#	command_name                   glance-list
#	command_line                   /usr/lib64/nagios/plugins/glance-list
#}
#
#define command {
#	command_name                   ceilometer-list
#	command_line                   /usr/lib64/nagios/plugins/ceilometer-list
#}
#define command {
#        command_name                   floating-ip-allocation-check
#        command_line                   /usr/lib64/nagios/plugins/floating-ip-allocation-check
#}
