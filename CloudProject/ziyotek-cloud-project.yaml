Description: >
    This template deploys a VPC with a pair of public and private subnets spread 
    across two Availability Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ).
    
    Parameters   
    
        PublicSubnet1CIDR:
            Description: Please enter the IP range (CIDR notation) for the public subnet in the first 
            Availability Zone 
            Type: String
            Default:192.168.33.150/24
            
        PrivateSubnet1CIDR:
            Description: Please enter the IP range (CIDR notation) for the private subnet in the first
            Availability Zone
            Type: String
             Default: 192.168.33.150/24
             
        VpcCIDR: 
            Description: Please enter the IP range (CIDR notation) for this VPC
            Type: String
            Default: 192.168.33.150/16
        KeyName:
           Description: Name of existing EC2 KeyPair to enable RDP access to instance
           Default Windows
           Type: AWS::EC2::KeyPair::KeyName
           ConstraintDescription: must be the name of existing EC2 KeyPair
        InstanceType: 
           Description: App EC2 instance type
           Type: String
           Default: m5.large
           AllowedValues:
           -t2.small
           -t2.medium
           -t2.large
           -m4.2xlarge
           -m5.xlarge
            ConstraintDescription: must be a valid EC2 instance type.
            
    Resources: 
   
         PubPrivateVPC:
            Type: 'AWS::EC2::InternetGateway'
            Properties:
              Tags: 
                - Key: Name
                  Value: IGW
                - Key: Network 
                  Value: Public
                  
         GatewayToInternet:
            Type: 'AWS::EC2::VPCGatewayAttachment'
            Properties:
              VpcId: !Ref PubPrivateVPC
              InternetGatewayId: !Ref InternetGateway
              
         PublicSubnet1: 
            Type: 'AWS::EC2::Subnet'
            Properties:
              VpcId: !Ref PubPrivateVPC 
              AvailabilityZone: !Select the [ 0, !GetAZs ]
              CidrBlock: !Ref Publicsubnet1CIDR
              MapPublicIpOnLaunch: true
              Tags: 
                - Key: Name
                  Value: Public1 subnet (AZ1)
                
        PrivateSubnet1: 
          Type: 'AWS::EC2::Subnet'
          Properties: 
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: !Select [ 0, !GetAZs ]
          CidrBlock: !Ref PrivateSubnet1CIDR        
          MapPublicIpOnLaunch: false
          Tags: 
            - Key: Name
              Value: Private subnet (AZ1)

        PublicRouteTable: 
          Type: 'AWS::EC2::RouteTable'
          Properties:
            VpcId: !Ref PublicPrivateVpc
            Tags: 
              Key: Name
              Value: Public

        PublicRoute1: 
          Type: "AWS::EC2::Route"
          DependsOn: GatewayToInternet
          Properties:
            RouteTableId: !Ref PublicRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

       PublicSubnet1RouteTableAssociation:
         Type: 'AWS::EC2::SubnetRouteTableAssociation'
         Properties: 
           SubnetId: !Ref PublicSubnet1
           RouteTableId: !Ref PublicRouteTable1

       NatGateway1: 
         Type: "AWS::EC2::NatGateway"
         DependsOn: NatPublicIP1
         Properties: 
           AllocationId: !GetAtt NatPublicIP1.AllocationId
           SubnetId: !Ref PublicSubnet1

       NatPublicIP1: 
         Type: "AWS::EC2::EIP"
         DependsOn: PublicPrivateVpc
         Properties:
           Domain: Vpc 

       PrivateRouteTable1:
         Type: "AWS::EC2RouteTable"   
         Properties: 
           VpcId: !Ref PrivateRouteTable1
           Tags:
            - Key: Name
              Value: Private Route (AZ1)
              Key: Network
              Value: Private

       PrivateRoute1: 
         Type: 'AWS::Ec2::Route'    
         Properties: 
           RouteTableId: !Ref PrivateRoute1
           DestinationCidrBlock: 0.0.0.0/0
           NatGatewayId: !Ref NatGateway1:
          
       PrivateSubneTableAssociation:
         Typr: 'AWS::Ec2::SubnetRouteTablAssociation'  
         Properties: 
         SubnetId: !Ref PrivateRoute1
         RouteTableId: !Ref PrivateRouteTable1

      EC2INST01:  
        Typr: AWS::EC2::Instance
        Properties: 
          InstanceType: 
            Ref: InstanceType
          KeyName:
            Ref: KeyName
          DisableApiTermination: true
          EbsOptimized: true
          ImageId: ami-04871e990097e4112
          SubnetId: 
            Ref: PublicSubnet1
          SecurityGroupIds:
            - sg-01576790afff73558
          Tags: 
           - Key: Name
             Value: EC2Test01
           - Key: Enviroment
             Value: Test 

Output:
            
   PubPrivateVPC: 
         Description: A reference to the created VPC 
         Tags: !Ref  PubPrivateVPC
         Export:
           Name: prdx-web11

   PublicSubnets1: 
      Description: A list of the private subnets
      Value: !Ref PrivateSubnet1
      Export: 
        Name: Private-Subnet1
        

           
  
             
      
      
        

     
       


                  